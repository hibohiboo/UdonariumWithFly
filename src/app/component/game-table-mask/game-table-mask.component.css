:host {
  display: block;
}

.is-grab {
  cursor: -moz-grab;
  cursor: -webkit-grab;
  cursor: grab;
}

.is-grabbing {
  cursor: -moz-grabbing;
  cursor: -webkit-grabbing;
  cursor: grabbing;
}

.is-scratching {
  cursor: pointer;
}

.is-transition {
  -webkit-transition: -webkit-transform 132ms linear;
  transition: transform 132ms linear;
}

.is-3d {
  transform-style: preserve-3d;
}

.component {
  position: absolute;
  height: 50px;
  width: 50px;
  backface-visibility: hidden;
  -moz-user-select: none;
  -webkit-user-select: none;
  user-select: none;
  
  -moz-user-drag: none;
  -webkit-user-drag: none;
}

.image {
  display: block;
  box-sizing: border-box;
}

.lock-icon, .draw-icon {
  background-color: #CCCCCC;
  border-radius: 100%;
  color: #444;
  width: 25px;
  height: 25px;
}
.lock-icon {
  visibility: hidden;
}
.component:hover .lock-icon, .component:active .lock-icon {
  visibility: visible;
}


.scratching, .draw-icon {
  visibility: visible;
}
.component:hover .scratching.is-mine, .component:active .scratching.is-mine,
.component:hover .draw-icon.is-mine, .component:active .draw-icon.is-mine {
  visibility: hidden;
}

.is-center {
  position: absolute;
  top: 0;
  bottom: 0;
  left: 0;
  right: 0;
  margin: auto;
}

.image.border {
  border-width: 0px;
} 

.component:hover .border, 
.component:active .border,
.is-border .border {
  outline: 2px solid #CCC !important;
  outline-offset: -2px;
}

.is-fit-full {
  height: 100%;
  width: 100%;
}

.is-3d {
  -webkit-transform-style: preserve-3d;
  transform-style: preserve-3d;
}

.altitude-indicator {
  padding-left: 2px;
  font-size: 11px;
  font-weight: bolder;
  color: blanchedalmond;
  text-shadow: #444 0px 0px 3px;
  backface-visibility: hidden;
}

.fall {
  -webkit-transition: transform 132ms ease-in-out;
  transition: transform 132ms ease-in-out;
}

.text {
  position: absolute;
  display: flex;
  align-items: center;
  justify-content: center;

  font-weight: bolder;
  text-align: center;
  white-space: pre-wrap;
  word-wrap: break-word;
  overflow-wrap: anywhere;
  word-break: break-word;
  font-size: 24px;
  color: #444;
  z-index: 5;
  overflow: hidden;
  text-overflow: ellipsis;
  text-shadow: 
  #fff 0px 0px 2px, 
  #fff 0px 0px 2px, 
  #fff 0px 0px 2px, 
  #fff 0px 0px 2px, 
  #fff 0px 0px 2px, 
  #fff 0px 0px 2px,
  #fff 0px 0px 2px,
  #fff 0px 0px 2px;
}

.is-inverse {
  transform: rotateZ(180deg);
}

.scratching-area {
  overflow: hidden;
}

.scratching-mark {
  transition: all;
}

.scratching-mark.scratching::before,
.scratching-mark.scratching::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 50px;
  border-radius: 3px;
}
.scratching-mark.restore::before,
.scratching-mark.restore::after {
  content: "";
  position: absolute;
  top: 50%;
  left: 50%;
  width: 5px;
  height: 24px;
  border-radius: 3px;
}
.scratching-mark.scratching::before {
  transform: translate(-50%,-50%) rotate(45deg);
}
.scratching-mark.scratching::after {
  transform: translate(-50%,-50%) rotate(-45deg);
}
.scratching-mark.restore::before {
  transform: translate(-50%,-50%);
}
.scratching-mark.restore::after {
  transform: translate(-50%,-50%) rotate(90deg);
}

.scratching-mark.restore,
.scratching-mark.scratched {
  border: 4px solid;
  border-radius: 2px;
}

.scratching-mark.scratching::before,
.scratching-mark.scratching::after {
  background-color: rgb(255, 62, 62);
}
.scratching-mark.scratched {
  border-color: rgb(255, 62, 62);
}
.scratching-mark.restore::before,
.scratching-mark.restore::after {
  background-color: rgb(128, 152, 255);
}
.scratching-mark.restore {
  border-color: rgb(128, 152, 255);
}

.name-tag {
  font-size: 15px;
  padding: 3px 9px;
  border-radius: 24px;
  opacity: 0.9;
  pointer-events: none;
  display: inline-block;
}

.component:hover .is-mine, 
.component:active .is-mine {
  visibility: hidden;
}

.has-length-limit {
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
  max-width: 18em;
}

.is-nowrap {
  white-space: nowrap;
}

.is-black-background {
  color: #CCC;
  background-color: rgba(30, 30, 30, 0.8);
}
